<?php
/**
 * OfferManagementApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Allegro REST API
 *
 * https://developer.allegro.pl/about  Documentation is generated from [this OpenAPI 3.0 specification file](https://developer.allegro.pl/swagger.yaml). To start working with our API, you can also check our [official Allegro REST API public collection](https://www.postman.com/allegro-rest-api/allegro-rest-api/collection/4puh6ls/allegro-rest-api) in Postman.
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OfferManagementApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OfferManagementApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for changePublicationStatusUsingPUT
     *
     * Batch offer publish / unpublish.
     *
     */
    public function testChangePublicationStatusUsingPUT()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createChangePriceCommandUsingPUT
     *
     * Modify the Buy Now price in an offer.
     *
     */
    public function testCreateChangePriceCommandUsingPUT()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createProductOffers
     *
     * Create offer based on product.
     *
     */
    public function testCreateProductOffers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOfferUsingDELETE
     *
     * Delete a draft offer.
     *
     */
    public function testDeleteOfferUsingDELETE()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for editProductOffers
     *
     * Edit an offer.
     *
     */
    public function testEditProductOffers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAvailableOfferPromotionPackages
     *
     * Get all available offer promotion packages.
     *
     */
    public function testGetAvailableOfferPromotionPackages()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOfferPromoOptionsUsingGET
     *
     * Get offer promotion packages.
     *
     */
    public function testGetOfferPromoOptionsUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOffersUnfilledParametersUsingGET1
     *
     * Get offers with missing parameters.
     *
     */
    public function testGetOffersUnfilledParametersUsingGET1()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getProductOfferProcessingStatus
     *
     * Check the processing status of a POST or PATCH request.
     *
     */
    public function testGetProductOfferProcessingStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoModificationCommandDetailedResultUsingGET
     *
     * Modification command detailed result.
     *
     */
    public function testGetPromoModificationCommandDetailedResultUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoModificationCommandResultUsingGET
     *
     * Modification command summary.
     *
     */
    public function testGetPromoModificationCommandResultUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPromoOptionsForSellerOffersUsingGET
     *
     * Get promo options for seller's offers.
     *
     */
    public function testGetPromoOptionsForSellerOffersUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPublicationReportUsingGET
     *
     * Publish command summary.
     *
     */
    public function testGetPublicationReportUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPublicationTasksUsingGET
     *
     * Publish command detailed report.
     *
     */
    public function testGetPublicationTasksUsingGET()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for modifyOfferPromoOptionsUsingPOST
     *
     * Modify offer promotion packages.
     *
     */
    public function testModifyOfferPromoOptionsUsingPOST()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for promoModificationCommandUsingPUT
     *
     * Batch offer promotion package modification.
     *
     */
    public function testPromoModificationCommandUsingPUT()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
